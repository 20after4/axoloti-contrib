<objdefs appVersion="1.0.12">
   <obj.normal id="ktransport" uuid="24d3767b-d841-401d-8719-77f54e4f7751">
      <sDescription>sort of a transport for sequencing.
3000 at inlet &apos;kticks&apos; will result in a 1hz wave ranging from 0 to 64.also,a position from 0 - 15 for step seqs is put out.
&apos;factor&apos; sets a multiplikation or divison factor,while &apos;mode&apos; selects whether to multiply or divide the &apos;tempo&apos;.</sDescription>
      <author>robert schirmer</author>
      <license>BSD</license>
      <helpPatch>lfo.axh</helpPatch>
      <inlets>
         <int32 name="kticks" description="length in samples"/>
         <int32 name="factor" description="adds to &apos;factor&apos;"/>
         <bool32.risingfalling name="mode" description="or &apos;mode&apos;"/>
         <bool32.rising name="reset" description="reset phase"/>
      </inlets>
      <outlets>
         <frac32 name="phase" description="phase 0. till 64."/>
         <int32 name="step"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="factor" description="multiplication or division factor">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <bool32.tgl name="mode" description="0 = multiply, 1 = divide"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t Phase;
uint32_t r;
uint64_t freq;
uint32_t base;
uint8_t factor;]]></code.declaration>
      <code.init><![CDATA[Phase = 0;
   r = 1;]]></code.init>
      <code.krate><![CDATA[factor = inlet_factor + param_factor;
base = (param_mode || inlet_mode) ?  (inlet_kticks * factor) : (inlet_kticks / factor);
freq = (int)(281474976710656.f/(base * (128<<7)));

{
      if (inlet_reset && r) {
         Phase = 0;
         r = 0;
      } else {
         if (!inlet_reset) r = 1;
         Phase += freq>>2;
      }
      outlet_phase = (Phase>>5);
      outlet_step = (Phase >> 28);
   }]]></code.krate>
   </obj.normal>
</objdefs>