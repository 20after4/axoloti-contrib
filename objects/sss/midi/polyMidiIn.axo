<objdefs appVersion="1.0.11">
   <obj.normal id="polyMidiIn" uuid="42d6e672-1a53-4c28-876b-7b46922a8a8e">
      <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity. Polyphonic touch output.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <frac32.bipolar name="note" description="midi note number (-64..63)"/>
         <bool32 name="gate" description="key pressed, no retrigger legato"/>
         <bool32 name="gate2" description="key pressed, retrigger on legato"/>
         <frac32.positive name="velocity" description="note-on velocity"/>
         <frac32.positive name="releaseVelocity" description="note-off velocity"/>
         <frac32.positive name="touch" description="polyphonic aftertouch"/>
         <int32 name="index"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int8_t _note;
int8_t _gate;
uint8_t _velo;
uint8_t _touch;
int8_t note[8];
int8_t velocity[8];
int8_t gate[8];
int8_t touch[8];
int i;
int pos[8];]]></code.declaration>
      <code.init><![CDATA[_gate = 0;
_note = 0;
_touch = 0;]]></code.init>
      <code.krate><![CDATA[int32_t index = _gate>(1<<26)?parent->polyIndex:0;
note[index]= _note;
gate[index]= _gate;
velocity[index]= _velo;
touch[index] = _touch;
int32_t sum=0;
for(i=0;i<8;i++){
if(gate[i]>0){
pos[sum]=i;
sum+=1;
}
int a=1;
while(a>0){
for(i=0;i<(sum-1>0?sum-1:0);i++){
a=0;
if(note[i]>note[i+1]){
a=1;
int32_t tmp;
tmp=note[i];
note[i]=note[i+1];
note[i+1]=tmp;
tmp=velocity[i];
velocity[i]=velocity[i+1];
velocity[i+1]=tmp;
tmp=touch[i];
touch[i]=touch[i+1];
touch[i+1]=tmp;
}
}
}
}]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  _velo = data2;
  _note = data1;
  _gate = 1;

} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||
          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_note == data1) {
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_POLY_PRESSURE)&&(data1 == _note)) {
  _touch = data2;
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs>