<objdefs appVersion="1.0.12">
   <obj.normal id="wf_16Steps" uuid="23b7bb32-3349-44c5-a22c-298698ebc5ed">
      <sDescription>For use with 16Steps(Sync)
Conveniently packs DISCONTINUOUS 16 steps in a &quot;audio rate output&quot;.</sDescription>
      <author>Thierry Rochebois</author>
      <license>LGPL</license>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <bool32 name="update"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="wf16"/>
         <bool32.pulse name="update"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.mapvsl name="s0" noLabel="true">
            <MinValue v="-62.9"/>
            <MaxValue v="62.9"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e0" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s1" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e1" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s2" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e2" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s3" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e3" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s4" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e4" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s5" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e5" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s6" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e6" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s7" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e7" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s8" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e8" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s9" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e9" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s10" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e10" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s11" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e11" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s12" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e12" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s13" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e13" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s14" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e14" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s15" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e15" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
      </params>
      <attribs/>
      <code.declaration><![CDATA[static const int16_t c(const int32_t x){
  if(x>0x07FFFFFF) return 32767;
  else return (int16_t)((x&0x0FFFFFFF) >> 12);
};

bool firstTime = true;
bool _update = false;]]></code.declaration>
      <code.krate><![CDATA[// Note: send a trig on first exec or on param change.
if(firstTime || inlet_update){
  firstTime = false;
  outlet_update = _update = true;
  int16_t* xStartEnd = (int16_t*)outlet_wf16;
  // 12 = 27 - 15 : q27 -> q15
  xStartEnd[0] = c(param_s0);
  xStartEnd[1] = c(param_e0);
  
  xStartEnd[2] = c(param_s1);
  xStartEnd[3] = c(param_e1);
  
  xStartEnd[4] = c(param_s2);
  xStartEnd[5] = c(param_e2);
  
  xStartEnd[6] = c(param_s3);
  xStartEnd[7] = c(param_e3);
  
  xStartEnd[8] = c(param_s4);
  xStartEnd[9] = c(param_e4);
  
  xStartEnd[10] = c(param_s5);
  xStartEnd[11] = c(param_e5);
  
  xStartEnd[12] = c(param_s6);
  xStartEnd[13] = c(param_e6);
  
  xStartEnd[14] = c(param_s7);
  xStartEnd[15] = c(param_e7);
  
  xStartEnd[16] = c(param_s8);
  xStartEnd[17] = c(param_e8);
  
  xStartEnd[18] = c(param_s9);
  xStartEnd[19] = c(param_e9);
  
  xStartEnd[20] = c(param_s10);
  xStartEnd[21] = c(param_e10);
  
  xStartEnd[22] = c(param_s11);
  xStartEnd[23] = c(param_e11);
  
  xStartEnd[24] = c(param_s12);
  xStartEnd[25] = c(param_e12);
  
  xStartEnd[26] = c(param_s13);
  xStartEnd[27] = c(param_e13);
  
  xStartEnd[28] = c(param_s14);
  xStartEnd[29] = c(param_e14);
  
  xStartEnd[30] = c(param_s15);
  xStartEnd[31] = c(param_e15);
} else {
  outlet_update = false;
}
_update = inlet_update;]]></code.krate>
   </obj.normal>
</objdefs>